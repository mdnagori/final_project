{"ast":null,"code":"var _jsxFileName = \"E:\\\\final_project\\\\Air_visca_frontend\\\\src\\\\screens\\\\RevenueReportScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Bar, Line } from 'react-chartjs-2';\nimport FlightAPIService from \"../service/FlightAPIService\";\nimport SuperAdminAPIService from \"../service/SuperAdminAPIService\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RevenueReportScreen(props) {\n  _s();\n\n  const [airlines, setAirlines] = useState([]);\n  const periods = [\"Monthly\", \"Quarterly\", \"Yearly\"];\n  const [selectedAirline, setSelectedAirline] = useState(\"\");\n  const [selectedInterval, setSelectedInterval] = useState(\"\");\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [quarterlyData, setQuarterlyData] = useState([]);\n  const [yearlyData, setYearlyData] = useState([]);\n  useEffect(() => {\n    console.log('component mounted!');\n    reloadAirlineList();\n  }, []);\n\n  const reloadAirlineList = () => {\n    FlightAPIService.getAirlineNames().then(res => {\n      console.log(res);\n      if (res.data.status == \"success\") setAirlines(res.data.data);\n    });\n  };\n\n  function setAirline(event) {\n    console.log(event.target.value);\n    setSelectedAirline(event.target.value);\n  }\n\n  function setInterval(event) {\n    console.log(event.target.value);\n    setSelectedInterval(event.target.value);\n  }\n\n  const revenueReport = () => {\n    SuperAdminAPIService.getRevenueReport(selectedAirline, selectedInterval).then(res => {\n      if (res.data.status == \"success\") {\n        if (selectedInterval == \"Monthly\") {\n          setQuarterlyData([]);\n          setYearlyData([]);\n          console.log(res.data.data);\n          setMonthlyData(res.data.data);\n        }\n\n        if (selectedInterval == \"Quarterly\") {\n          console.log(\"quarter\");\n          setMonthlyData([]);\n          setYearlyData([]);\n          console.log(res.data.data);\n          setQuarterlyData(res.data.data);\n        }\n\n        if (selectedInterval == \"Yearly\") {\n          console.log(\"year\");\n          setMonthlyData([]);\n          setQuarterlyData([]);\n          console.log(res.data.data);\n          setYearlyData(res.data.data);\n        }\n      }\n    });\n  };\n\n  const mlabels = monthlyData.map(function (e) {\n    if (e.month == 1) return \"January\";\n    if (e.month == 2) return \"February\";\n    if (e.month == 3) return \"March\";\n    if (e.month == 4) return \"April\";\n    if (e.month == 5) return \"May\";\n    if (e.month == 6) return \"June\";\n    if (e.month == 7) return \"July\";\n    if (e.month == 8) return \"August\";\n    if (e.month == 9) return \"September\";\n    if (e.month == 10) return \"October\";\n    if (e.month == 11) return \"November\";\n    if (e.month == 12) return \"December\";\n  });\n  const mdata = monthlyData.map(function (e) {\n    return e.revenue;\n  });\n  const Monthdata = {\n    labels: mlabels,\n    datasets: [{\n      label: 'Monthly Revenue for year 2021(₹)',\n      data: mdata,\n      borderColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)'],\n      backgroundColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)']\n    }]\n  };\n  const qlabels = quarterlyData.map(function (e) {\n    if (e.quarter == 1) return \"Jan-Mar\";\n    if (e.quarter == 2) return \"Apr-Jun\";\n    if (e.quarter == 3) return \"Jul-Sep\";\n    if (e.quarter == 4) return \"Oct-Dec\";\n  });\n  const qdata = quarterlyData.map(function (e) {\n    return e.revenue;\n  });\n  const Quarterdata = {\n    labels: qlabels,\n    datasets: [{\n      label: 'Quarterly Revenue for 2021(₹)',\n      data: qdata,\n      borderColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)'],\n      backgroundColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)']\n    }]\n  };\n  const ylabels = yearlyData.map(function (e) {\n    return e.year;\n  });\n  const ydata = yearlyData.map(function (e) {\n    return e.revenue;\n  });\n  const Yeardata = {\n    labels: ylabels,\n    datasets: [{\n      label: 'Yearly Revenue(₹)',\n      lineTension: 0,\n      data: ydata,\n      borderColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)'],\n      backgroundColor: ['rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)', 'rgba(229,98,67,1)']\n    }]\n  };\n  const options = {\n    title: {\n      display: true,\n      text: 'Revenue Chart'\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"black\",\n          fontSize: 14,\n          fontStyle: \"bold\",\n          min: 1000,\n          max: 100000,\n          stepsize: 5000\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor: \"black\",\n          fontSize: 14,\n          fontStyle: \"bold\"\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Revenue Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4 my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"airline\",\n            class: \"form-control\",\n            name: \"airline\",\n            onChange: setAirline,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"airline\",\n              hidden: true,\n              selected: true,\n              children: \"Select Airline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), airlines.map(airline => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: airline,\n                children: airline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 28\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4 my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            d: \"interval\",\n            class: \"form-control\",\n            name: \"interval\",\n            onChange: setInterval,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"intervals\",\n              hidden: true,\n              selected: true,\n              children: \"Select Interval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), periods.map(period => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: period,\n                children: period\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 28\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-4 my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => revenueReport(),\n            children: [\" \", \"Generate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"my-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ClassName: \"chart\",\n        children: [monthlyData.length > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n          data: Monthdata,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 39\n        }, this), quarterlyData.length > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n          data: Quarterdata,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 41\n        }, this), yearlyData.length > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n          data: Yeardata,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RevenueReportScreen, \"stnzQxeMmLm+qDvgxfqGiErtAKo=\");\n\n_c = RevenueReportScreen;\nexport default RevenueReportScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenueReportScreen\");","map":{"version":3,"sources":["E:/final_project/Air_visca_frontend/src/screens/RevenueReportScreen.js"],"names":["React","useState","useEffect","Bar","Line","FlightAPIService","SuperAdminAPIService","Header","RevenueReportScreen","props","airlines","setAirlines","periods","selectedAirline","setSelectedAirline","selectedInterval","setSelectedInterval","monthlyData","setMonthlyData","quarterlyData","setQuarterlyData","yearlyData","setYearlyData","console","log","reloadAirlineList","getAirlineNames","then","res","data","status","setAirline","event","target","value","setInterval","revenueReport","getRevenueReport","mlabels","map","e","month","mdata","revenue","Monthdata","labels","datasets","label","borderColor","backgroundColor","qlabels","quarter","qdata","Quarterdata","ylabels","year","ydata","Yeardata","lineTension","options","title","display","text","scales","yAxes","ticks","fontColor","fontSize","fontStyle","min","max","stepsize","xAxes","airline","period","length"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect } from \"react\";\r\nimport { Bar,Line } from 'react-chartjs-2';\r\nimport FlightAPIService from \"../service/FlightAPIService\";\r\nimport SuperAdminAPIService from \"../service/SuperAdminAPIService\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction RevenueReportScreen(props) {\r\n  const [airlines,setAirlines]=useState([]);\r\n  const periods=[\"Monthly\",\"Quarterly\",\"Yearly\"];\r\n  const [selectedAirline,setSelectedAirline]=useState(\"\");\r\n  const [selectedInterval,setSelectedInterval]=useState(\"\");\r\n  const [monthlyData,setMonthlyData]=useState([]);\r\n  const [quarterlyData,setQuarterlyData]=useState([]);\r\n  const [yearlyData,setYearlyData]=useState([]);\r\n  useEffect(()=>{\r\n    console.log('component mounted!')\r\n    reloadAirlineList();\r\n  },[])\r\n\r\n\r\n  const reloadAirlineList=() =>{\r\n    FlightAPIService.getAirlineNames()\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.status == \"success\")\r\n            setAirlines(res.data.data);\r\n    });\r\n  }\r\n\r\n  function setAirline(event){\r\n    console.log(event.target.value);\r\n    setSelectedAirline(event.target.value);\r\n  }\r\n\r\n  function setInterval(event){\r\n    console.log(event.target.value);\r\n    setSelectedInterval(event.target.value);\r\n  }\r\n\r\n  const revenueReport=() =>{\r\n    SuperAdminAPIService.getRevenueReport(selectedAirline,selectedInterval)\r\n    .then((res)=>{\r\n      if( res.data.status == \"success\"){\r\n        if(selectedInterval == \"Monthly\"){\r\n          setQuarterlyData([]);\r\n          setYearlyData([]);\r\n          console.log(res.data.data);\r\n          setMonthlyData(res.data.data);\r\n        }\r\n        if(selectedInterval == \"Quarterly\"){\r\n          console.log(\"quarter\");\r\n          setMonthlyData([]);\r\n          setYearlyData([]);\r\n          console.log(res.data.data);\r\n          setQuarterlyData(res.data.data);\r\n        }\r\n        if(selectedInterval == \"Yearly\"){\r\n          console.log(\"year\");\r\n          setMonthlyData([]);\r\n          setQuarterlyData([]);\r\n          console.log(res.data.data);\r\n          setYearlyData(res.data.data);\r\n        }\r\n      }\r\n    })\r\n   \r\n  }\r\nconst mlabels =monthlyData.map(function (e) {\r\n        if(e.month==1) return \"January\";\r\n        if(e.month==2) return \"February\";\r\n        if(e.month==3) return \"March\";\r\n        if(e.month==4) return \"April\";\r\n        if(e.month==5) return \"May\";\r\n        if(e.month==6) return \"June\";\r\n        if(e.month==7) return \"July\";\r\n        if(e.month==8) return \"August\";\r\n        if(e.month==9) return \"September\";\r\n        if(e.month==10) return \"October\";\r\n        if(e.month==11) return \"November\";\r\n        if(e.month==12) return \"December\";\r\n      })\r\nconst mdata =monthlyData.map(function (e) {\r\n    return e.revenue;})\r\n\r\nconst Monthdata={\r\n    \r\n        labels:mlabels,\r\n        datasets:[\r\n            {\r\n                label:'Monthly Revenue for year 2021(₹)',\r\n                data:mdata,\r\n                borderColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],\r\n                backgroundColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],  \r\n            }\r\n            \r\n        ]\r\n      }\r\nconst qlabels =\r\n      quarterlyData.map(function (e) {\r\n        if(e.quarter==1) return \"Jan-Mar\";\r\n        if(e.quarter==2) return \"Apr-Jun\";\r\n        if(e.quarter==3) return \"Jul-Sep\";\r\n        if(e.quarter==4) return \"Oct-Dec\";\r\n      })\r\nconst qdata =quarterlyData.map(function (e) {\r\n    return e.revenue;})\r\n   \r\nconst Quarterdata={\r\n  labels:qlabels,\r\n        datasets:[\r\n            {\r\n                label:'Quarterly Revenue for 2021(₹)',\r\n                data:qdata,\r\n                borderColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],\r\n                backgroundColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],\r\n               \r\n            }\r\n            \r\n        ]\r\n      }\r\nconst ylabels =yearlyData.map(function (e) {\r\n        return e.year;\r\n      })\r\nconst ydata =yearlyData.map(function (e) {\r\n        return e.revenue;})\r\n\r\nconst Yeardata={\r\n  labels:ylabels,\r\n        datasets:[\r\n            {\r\n                label:'Yearly Revenue(₹)',\r\n                lineTension: 0,      \r\n                data:ydata,\r\n                borderColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],\r\n                backgroundColor:['rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)','rgba(229,98,67,1)'],  \r\n            }\r\n            \r\n        ]\r\n      }\r\nconst options={\r\n    title:{\r\n        display:true,\r\n        text:'Revenue Chart'\r\n    },\r\n    scales:{\r\n      yAxes:[\r\n          {\r\n              ticks:{\r\n                  fontColor: \"black\",\r\n                  fontSize: 14,\r\n                  fontStyle: \"bold\",\r\n                  min:1000,\r\n                  max:100000,\r\n                  stepsize:5000\r\n              }\r\n          }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n              fontColor: \"black\",\r\n              fontSize: 14,\r\n              fontStyle: \"bold\"\r\n          }\r\n      }\r\n    ]\r\n  },\r\n}\r\n    return (\r\n      <div>\r\n        <div>\r\n        <Header title=\"Revenue Report\"/>\r\n            <div class=\"row\">\r\n              <div class=\"col-4 my-4\">\r\n                <select\r\n                  id=\"airline\"\r\n                  class=\"form-control\"\r\n                  name=\"airline\"\r\n                  onChange={setAirline}\r\n                >\r\n                  <option value=\"airline\" hidden selected>Select Airline</option>\r\n                  {airlines.map((airline) => {\r\n                    return <option value={airline}>{airline}</option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4 my-4\">\r\n                <select\r\n                  d=\"interval\"\r\n                  class=\"form-control\"\r\n                  name=\"interval\"\r\n                  onChange={setInterval}\r\n                >\r\n                  <option value=\"intervals\" hidden selected>Select Interval</option>\r\n                  {periods.map((period) => {\r\n                    return <option value={period}>{period}</option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4 my-4\">\r\n              <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => \r\n                  revenueReport()}\r\n                >\r\n                  {\" \"}\r\n                Generate\r\n              </button>\r\n            </div>\r\n            </div>\r\n          </div>          \r\n        \r\n      <div class='my-6'>\r\n        <div ClassName='chart'>\r\n            {monthlyData.length >0 && <Bar data={Monthdata} options={options}/> }\r\n            {quarterlyData.length >0 && <Bar data={Quarterdata} options={options}/>}          \r\n            {yearlyData.length >0 && <Bar data={Yeardata} options={options}/>} \r\n        </div>\r\n      </div>\r\n      \r\n    </div>  \r\n    );\r\n}\r\n\r\nexport default RevenueReportScreen;\r\n"]},"metadata":{},"sourceType":"module"}